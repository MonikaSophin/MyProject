package com.design_mode.behavioral_patterns.visitor_pattern;
/**
 *  3.12 访问者模式
 *
 *    定义：表示一个作用于某对象结构中的各元素的操作。它使你可以在不改变各元素类的前提下定义作用于这些元素的新操作。
 *
 *        我们使用了一个访问者类，它改变了元素类的执行算法。通过这种方式，元素的执行算法可以随着访问者改变而改变。
 *    根据模式，元素对象已接受访问者对象，这样访问者对象就可以处理元素对象上的操作。
 *        访问者模式把数据结构和作用于结构上的操作解耦合，使得操作集合可相对自由地演化。访问者模式适用于数据结构
 *    相对稳定算法又易变化的系统。因为访问者模式使得算法操作增加变得容易。若系统数据结构对象易于变化，经常有新的
 *    数据对象增加进来，则不适合使用访问者模式。
 *
 *    关键代码：在数据基础类里面有一个方法接受访问者，将自身引用传入访问者。
 *
 *    角色：
 *    1.Visitor 抽象访问者角色，为该对象结构中具体元素角色声明一个访问操作接口。
 *    该操作接口的名字和参数标识了发送访问请求给具体访问者的具体元素角色，
 *    这样访问者就可以通过该元素角色的特定接口直接访问它。
 *    2.ConcreteVisitor.具体访问者角色，实现Visitor声明的接口。
 *    3.Element 定义一个接受访问操作(accept())，它以一个访问者(Visitor)作为参数。
 *    4.ConcreteElement 具体元素，实现了抽象元素(Element)所定义的接受操作接口。
 *    5.ObjectStructure 结构对象角色，这是使用访问者模式必备的角色。它具备以下特性：
 *    能枚举它的元素；可以提供一个高层接口以允许访问者访问它的元素；如有需要，可以设计
 *    成一个复合对象或者一个聚集（如一个列表或无序集合）。
 */