package com.design_mode.behavioral_patterns.interpreter_pattern;
/**
 *  3.3 解释器模式
 *
 *    定义：提供了评估语言的语法或表达式的方式，它属于行为型模式。
 *    这种模式实现了一个表达式接口，该接口解释一个特定的上下文。
 *    这种模式被用在 SQL 解析、符号处理引擎等。
 *
 *    关键代码：抽象解释器（AbstractExpression）：具体的解释任务由各个实现类完成。
 *            终结符表达式（TerminalExpression）：实现与文法中的元素相关联的解释操作，通常一个解释器模式中只有一个终结表达式，但有多个实例，对应不同的终结符。
 *            非终结符表达式（NonterminalExpression）：文法中的每条规则对应于一个非终结表达式，非终结符表达式根据逻辑的复杂程度而增加，原则上每个文法规则都对应一个非终结符表达式
 *           上下文（Context）: 上下文环境类,包含解释器之外的全局信息
 *           客户类（Test）: 客户端,解析表达式,构建抽象语法树,执行具体的解释操作等.
 *
 *           解释器模式采用递归调用方法。
 */